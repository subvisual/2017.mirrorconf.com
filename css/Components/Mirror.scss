@import "../Theme/Breakpoint";
@import "../Theme/Browsers";
@import "../Theme/Color";
@import "../Theme/Global";
@import "../Theme/Spacing";

$Mirror-reflection-max-width: 946px;
$Mirror-reflection-transform: 129px;

.Mirror {
  position: relative;
}

.Mirror-original,
.Mirror-reflection {
  width: 100%;
}

.Mirror-original {
  position: relative; //hack to make this allways on top
}

.Mirror-container {
  position: absolute;
  top: 0;
  left: 50%;

  width: 100%;
  height: 100%;

  overflow: hidden;

  pointer-events: none;

  perspective: 300px;
  transform: translateX(-50%);

  @include Breakpoint-mobileOnly {
    display: none;
  };
}

.Mirror-cut {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);

  width: 100%;
  height: 100%;
  max-width: $Mirror-reflection-max-width;
  background: linear-gradient(
    to bottom, rgba($Color-white, 0) 0%, rgba($Color-white, 0.05) 70%
  );
}

.Mirror-reflection {
  position: absolute;

  top: 0;
  left: 50%;

  width: 100vw;
  max-width: $Global-content-max-width;

  pointer-events: none;

  transform: scaleX(-1) translateX(50%);

  filter: opacity(0.3) blur(7px);

  @include variablesSupported {
    transform: scaleX(-1) translateX(50%) rotateX(var(--mirror-rotation-x)) rotateY(var(--mirror-rotation-y));

    --mirror-rotation-x: 0deg;
    --mirror-rotation-y: 0deg;
  }
}

.Mirror-reflection [data-mirror-hide] {
  visibility: hidden;
}

.Mirror-reflection [data-mirror-disable] {
  display: none;
}

.Mirror-container {
  display: none;

  @include mirrorSupported {
    display: block;
  }
}

